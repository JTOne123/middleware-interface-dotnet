resources:
- repo: self

trigger:
  batch: true
  
pr:
- master

variables:
- group: 'Code Signing Certificates'
- name: BuildConfiguration
  value: release
- name: BuildPlatform
  value: any cpu
- name: Solution
  value: 'fiskaltrust.if.sln'

jobs:
  - job: Build 
    pool:
      vmImage: windows-latest
    steps:
    - task: VisualStudioTestPlatformInstaller@1
      displayName: VsTest Platform Installer

    - powershell: |
        dotnet tool install -g nbgv 
      workingDirectory: '/'
      displayName: Install nbgv CLI

    - powershell: |
        if (-not $Env:BUILD_SOURCEBRANCH.StartsWith("refs/tags/v") -and
            -not $Env:BUILD_SOURCEBRANCH.StartsWith("refs/heads/master") -and
            -not $Env:BUILD_SOURCEBRANCH.StartsWith("refs/heads/release")) {
          git config --global user.email "fiskaltrust@fiskaltrust.cloud"
          git config --global user.name "fiskaltrust"
          $date = "$(Get-Date -UFormat "%y")$("{0:D3}" -f (Get-Date).DayofYear)"  
          $versionPostfix = "-$date-$(Build.BuildId)"
          $versionContent = Get-Content 'version.json' -Raw | ConvertFrom-Json
          $versionContent.version = "$($versionContent.version)$versionPostfix"
          $versionContent | ConvertTo-Json -Depth 32 | Set-Content 'version.json'
          git add .
          git commit -m "Version bump" -q
        }
        nbgv cloud
      displayName: Set NBGV version

    - task: DotNetCoreCLI@2
      displayName: Restore
      inputs:
        command: restore
        projects: '**/*.csproj'

    - task: DotNetCoreCLI@2
      displayName: Build
      inputs:
        projects: '**/*.csproj'
        arguments: '--configuration $(BuildConfiguration)'

    - task: codesigning@2
      displayName: 'Code Signing '
      inputs:
        secureFileId: 'codesigning.pfx'
        signCertPassword: '$(Code_Signing_Password)'
        filePaths: |
         **/*.dll
         **/*.exe

    - script: dotnet test --no-build --configuration $(buildConfiguration)  --test-adapter-path:. --logger:nunit;LogFilePath=TestResults.xml
      displayName: 'dotnet Test ifPOS'
      workingDirectory:  'test\fiskaltrust.ifPOS.Tests'

    - task: PublishTestResults@2
      displayName: 'Publish Test Results'
      inputs:
        testResultsFormat: NUnit
        testResultsFiles: '**/*TestResults*.xml'
        mergeTestResults: true
        failTaskOnFailedTests: true
        buildConfiguration: $(buildConfiguration)

    - script: dotnet pack --no-build --output $(Build.ArtifactStagingDirectory) --configuration $(buildConfiguration)
      displayName: 'dotnet pack ifPOS'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: drop'
      inputs:
        PathtoPublish: '$(build.artifactstagingdirectory)'